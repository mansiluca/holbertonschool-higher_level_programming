The ``7-base_geometry`` module
=======================
Using ``BaseGeometry``
---------------

Import class from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Instantiate class:
    >>> bg = BaseGeometry()

Test area method (not implemented):
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Test integer validator with valid integers:
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Test integer validator with zero:
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

Test integer validator with negative value:
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

Test integer validator with non-integer types:
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer
    >>> bg.integer_validator("average", 7.8)
    Traceback (most recent call last):
    TypeError: average must be an integer
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

Test integer validator with wrong number of arguments:
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Test integer validator with tuple, list, dict:
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer
