The ``1-my_list`` module
=======================
Using ``MyList``
---------------
Import class from module:
    >>> MyList = __import__('1-my_list').MyList

Test empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test normal list:
    >>> my_list = MyList([1, 4, 2, 3, 5])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test list with negative numbers:
    >>> my_list = MyList([-1, -4, -2, -3, -5])
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Test list with repeated numbers:
    >>> my_list = MyList([1, 1, 1, 1])
    >>> my_list.print_sorted()
    [1, 1, 1, 1]

Test list with one element:
    >>> my_list = MyList([1])
    >>> my_list.print_sorted()
    [1]

Test append method:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 4]

Test list with mixed numbers:
    >>> my_list = MyList([1, -2, 3, -4, 5, -6])
    >>> my_list.print_sorted()
    [-6, -4, -2, 1, 3, 5]

Test inheritance:
    >>> issubclass(MyList, list)
    True

Test instantiation:
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test empty print_sorted:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test type after print_sorted:
    >>> my_list = MyList([1, 2, 3])
    >>> type(my_list.print_sorted())
    [1, 2, 3]
    <class 'NoneType'>
    >>> my_list
    [1, 2, 3]
